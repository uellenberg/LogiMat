export cSin;
export cPow;
export cMul;
export cDiv;

export const t_heta = 0;
export const p_oint = (cos(t_heta), sin(t_heta));

export function r_un(x) {
    cSin(cPow(x, p_oint))
}

export function g_o(a, b, n) {
    const fn1 = complexfunction!(0, 656546453547, "a", "b", "n");
    const fn2 = complexfunction!(0, 65345756756, "a", "b", "n");
    const fn3 = complexfunction!(0, 2434746352412356342, "a", "b", "n");
    
    cMod(cLog(fn1, fn2), fn3)
}

export function i_t(x) {
    state = x;

    define!(ITERATION, 1);
    iterate!({
        state = g_o(state, x, get!(ITERATION));

        define!(ITERATION, ITERATION + 1);
    }, ITERATIONS);
}