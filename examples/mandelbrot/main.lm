//This file creates a rendering of the Mandelbrot set. It works by computing the number of iterations that each pixel takes to generate, then using that iteration number to color it based on a gradient.
//Due to Desmos' limitations, only a 100x100 (10,000 element) grid of pixels is possible. This program gets around that by creating 4 200x50 strips of pixels (or whatever you have it configured to).

import templates from "graphgame";
initialize!();

inline const width = 10;
inline const height = 10;

export const r_es = width/2 * 50;

export const x_off = -.7326;
export const y_off = 0.2411;

//Defines the maximum size for something to be considered infinite.
inline const max_size = 2;

//Defines the number of iterations to use.
define!(ITERATIONS, 20);

//Defines the amount of "splits" to use. For a 200x200 image, you need 4 splits (200*200 / 10,000 = 4).
//This will create 4 images with 10,000 pixels each, which will be placed together to form a complete image.
define!(SPLITS, 1);

//Import everything.

//First, add a background.
import!("background.lm");
//Next, make it possible to compute the Mandelbrot set.
import!("mandelbrot.lm");
//After that, use the Mandelbrot set to compute the colors.
import!("color.lm");
//Create an object that the colors can be applied to.
import!("rendering.lm");
//Use the methods defined above to display everything.
import!("display.lm");